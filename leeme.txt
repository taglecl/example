Gu√≠a: Conectar Formulario a Google Sheets


Este proyecto contiene una p√°gina de aterrizaje simple (index.html) cuyo formulario se conecta a una Hoja de C√°lculo de Google para almacenar los datos de los usuarios.

Para que funcione, es necesario configurar un intermediario con Google Apps Script.

Pasos de Configuraci√≥n
Sigue estas instrucciones para habilitar el guardado de datos.


********
Paso 1: Crear la Hoja de C√°lculo

Crea una nueva hoja de c√°lculo en Google Sheets.

Dale un nombre (ej. "Registros App").

Configura los encabezados en la primera fila. Es crucial que los nombres coincidan con los del formulario:

Celda A1: timestamp 
Celda B1: name
Celda C1: email

Timestamp: en esa casilla se registra la hora de cuando se dejaron los datos
name: el nombre
email: la casilla de correo jeje

********

Paso 2: Crear el Google Apps Script
En tu hoja de c√°lculo, ve al men√∫ Extensiones > Apps Script.


Borra el c√≥digo de ejemplo y pega lo siguiente. copia desde function hasta }





function doPost(e) {
  try {
    // Abre la hoja de c√°lculo activa.
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
    
    // Obtiene los par√°metros enviados desde el formulario HTML.
    const name = e.parameter.name;
    const email = e.parameter.email;
    
    // Crea una marca de tiempo para el registro.
    const timestamp = new Date();
    
    // Agrega una nueva fila con los datos recibidos.
    sheet.appendRow([timestamp, name, email]);
    
    // Devuelve una respuesta JSON de √©xito.
    return ContentService.createTextOutput(JSON.stringify({ 'result': 'success' }))
      .setMimeType(ContentService.MimeType.JSON);
      
  } catch (error) {
    // En caso de error, devuelve un mensaje JSON detallado.
    return ContentService.createTextOutput(JSON.stringify({ 'result': 'error', 'error': error.toString() }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}






*****

Guarda el proyecto (üíæ) con un nombre como "API Formulario".


*******

Paso 3: Implementar el Script como Aplicaci√≥n Web

Haz clic en el bot√≥n azul "Implementar" y selecciona "Nueva implementaci√≥n".

Haz clic en el √≠cono del engranaje (‚öôÔ∏è) y elige "Aplicaci√≥n web".

Configura las siguientes opciones:

Descripci√≥n: API para recibir datos del formulario de la landing page.

Ejecutar como: Yo.

¬øQui√©n tiene acceso?: Cualquier persona (¬°Importante!).

Haz clic en "Implementar".





*******

Paso 4: Autorizar Permisos

Google te pedir√° autorizaci√≥n. Haz clic en "Autorizar acceso".

Selecciona tu cuenta de Google.

Si aparece una advertencia de "Google no ha verificado esta aplicaci√≥n", haz clic en "Configuraci√≥n avanzada" y luego en "Ir a [nombre de tu proyecto] (no seguro)".

Revisa y "Permitir" los permisos.







******

Paso 5: Conectar la URL con el HTML

Despu√©s de autorizar, copia la URL de la aplicaci√≥n web que te proporciona Google.

Abre el archivo index.html.

Busca la siguiente l√≠nea en la secci√≥n <script>:

const SCRIPT_URL = 'URL_DE_TU_GOOGLE_APPS_SCRIPT_AQUI';


Reemplaza URL_DE_TU_GOOGLE_APPS_SCRIPT_AQUI con la URL que copiaste. Deber√≠a verse as√≠:

const SCRIPT_URL = '[https://script.google.com/macros/s/AKfycb.../exec](https://script.google.com/macros/s/AKfycb.../exec)';


Guarda el archivo index.html.





¬°Listo! Tu formulario ya est√° conectado y guardar√° los datos autom√°ticamente en tu Hoja de C√°lculo de Google.


√©xito en esta nueva etapa y que tu app sea todo un √©xito.


